generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Refresh_tokens {
  id            String    @id @map("_id") @db.VarChar(36)
  user_id       String    @db.VarChar(36)
  refresh_token String    @db.VarChar(255) @unique
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  user         Users     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id], map: "idx_user_id")
  @@index([refresh_token], map: "idx_refresh_token") 
}

model Users {
  id                    String    @id @map("_id") @db.VarChar(36)
  name                  String?   @default("") @db.VarChar(100)
  email                 String    @unique(map: "email") @db.VarChar(255)
  date_of_birth         DateTime? @db.Date
  gender                String?   @default("") @db.VarChar(20)
  password              String?   @default("") @db.VarChar(255)
  phone_number          String?   @default("") @db.VarChar(255)
  created_at            DateTime? @default(now()) @db.Timestamp(0)
  updated_at            DateTime? @default(now()) @db.Timestamp(0)
  forgot_password_token String?   @default("") @db.VarChar(100)
  google_id             String?   @default("") @db.VarChar(100)
  verify                Int?      @default(0) @db.TinyInt
  role                  Int?      @default(0) @db.TinyInt

  Refresh_tokens        Refresh_tokens[]
  ConsultantProfiles     ConsultantProfiles?
  Questions             Questions[]

  @@index([google_id], map: "idx_google_id")
  @@index([forgot_password_token], map: "idx_forgot_token")
}

enum Topic {
  WOMENS_REPRODUCTIVE_HEALTH
  CONTRACEPTION_AND_FAMILY_PLANNING
  PREGNANCY_AND_MATERNITY_SUPPORT
  STIS
  SEXUAL_HEALTH_AND_GENDER_PSYCHOLOGY
  TESTING_AND_DIAGNOSTIC_SERVICES
}

model ConsultantProfiles {
  id               String   @id @map("_id") @db.VarChar(36)
  user_id          String   @unique @db.VarChar(36)
  specialization_1          Topic    
  specialization_2          Topic?
  certifications   String?  @default("") @db.VarChar(255)
  experienceYears  Int      @default(0) @db.Int
  status           Int      @default(1) @db.TinyInt

  user             Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  Questions        Questions[]
}

model Questions {
  id             String   @id @map("_id") @db.VarChar(36)

  user_id        String?  @db.VarChar(36)
  consultant_id  String   @db.VarChar(36)
  topic          Topic
  question       String   @db.Text
  answer         String?  @db.Text
  is_public      Boolean  @default(true)
  created_at     DateTime @default(now()) @db.Timestamp(0)
  answered_at    DateTime? @db.Timestamp(0)

  user           Users?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  consultant     ConsultantProfiles @relation(fields: [consultant_id], references: [id], onDelete: Cascade)
}